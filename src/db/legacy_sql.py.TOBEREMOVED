# src/db/legacy_sql.py

import os
import psycopg2
import sqlite3
from urllib.parse import urlparse

def get_conn(db_url=None):
    """Establish a DB connection (Postgres or SQLite) from DATABASE_URL."""
    db_url = db_url or os.getenv("DATABASE_URL", "sqlite:///dev.sqlite3")
    print(f"🌐 [legacy_sql] get_conn() using db_url = {db_url}", flush=True)

    try:
        if db_url.startswith("sqlite:///"):
            path = db_url.replace("sqlite:///", "")
            print(f"🔗 Connecting to SQLite at {path}", flush=True)
            return sqlite3.connect(path)

        if db_url.startswith("postgresql://"):
            parsed = urlparse(db_url)
            ssl_mode = "require" if "sslmode=" not in db_url else ""
            full_url = db_url if ssl_mode == "" else f"{db_url}?sslmode={ssl_mode}"
            print(f"🔗 Connecting to Postgres at {parsed.hostname}:{parsed.port}", flush=True)
            return psycopg2.connect(full_url)

        raise ValueError(f"Unsupported DATABASE_URL format: {db_url}")

    except Exception as e:
        print(f"❌ [legacy_sql] Failed to connect using {db_url}:\n{e}", flush=True)
        raise RuntimeError("Could not establish DB connection.")
