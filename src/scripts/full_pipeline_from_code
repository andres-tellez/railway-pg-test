# src/scripts/full_pipeline_from_code.py

import argparse
import logging
from src.db.db_session import get_session
from src.services.token_service import store_tokens_from_callback
from src.scripts.main_pipeline import onboard_and_sync

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def main(code, lookback_days, batch_size):
    session = get_session()
    try:
        # Step 1: Exchange code and insert athlete + token
        athlete_id = store_tokens_from_callback(code, session)
        logger.info(f"âœ… Athlete stored with ID: {athlete_id}")

        # Step 2: Run sync + enrichment
        onboard_and_sync(athlete_id, lookback_days, batch_size)

    except Exception as e:
        logger.exception(f"ðŸ”¥ Error during full pipeline execution: {e}")
    finally:
        session.close()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Full pipeline: OAuth + sync + enrichment")
    parser.add_argument("--code", required=True, help="Strava OAuth code")
    parser.add_argument("--lookback_days", type=int, default=30)
    parser.add_argument("--batch_size", type=int, default=10)

    args = parser.parse_args()
    main(args.code, args.lookback_days, args.batch_size)
