# tests/test_enrichment_debug_wrapper.py

import pytest
from unittest.mock import MagicMock
from src.utils.enrichment_debug_wrapper import EnrichmentDebugWrapper
from src.db.models.splits import Split
from src.db.models.activities import Activity

@pytest.fixture
def seed_activity(sqlalchemy_session):
    """Insert dummy activity for FK constraint."""
    activity = Activity(activity_id=9876, athlete_id=42)
    sqlalchemy_session.add(activity)
    sqlalchemy_session.commit()
    return activity

def test_enrichment_debug_wrapper(sqlalchemy_session, seed_activity):
    # Mock enrichor with dummy enrich method
    mock_enrichor = MagicMock()
    mock_enrichor.enrich.return_value = 1

    # Add one pending split object (simulate enrichment)
    split = Split(
        activity_id=seed_activity.activity_id,
        lap_index=1,
        distance=1000,
        elapsed_time=300,
        average_speed=3.3,
        max_speed=3.5,
        split=True
    )
    sqlalchemy_session.add(split)

    # Run wrapper
    wrapper = EnrichmentDebugWrapper(mock_enrichor, sqlalchemy_session)
    enriched_count = wrapper.enrich(athlete_id=42, batch_size=10)

    assert enriched_count == 1
    mock_enrichor.enrich.assert_called_once()

    # Verify split committed
    rows = sqlalchemy_session.query(Split).filter_by(activity_id=seed_activity.activity_id).all()
    assert len(rows) == 1
