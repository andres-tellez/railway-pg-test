"""baseline

Revision ID: fbdfce5b4297
Revises: 
Create Date: 2025-06-05 15:13:12.192899

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fbdfce5b4297'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('splits')
    op.drop_table('activities')
    op.drop_table('tokens')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tokens',
    sa.Column('athlete_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('expires_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('athlete_id', name=op.f('tokens_pkey'))
    )
    op.create_table('activities',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('activity_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('athlete_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('distance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('moving_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('elapsed_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_elevation_gain', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sport_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date_local', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('utc_offset', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('achievement_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('kudos_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('athlete_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('photo_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trainer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('commute', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('manual', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('private', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('flagged', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('visibility', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gear_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('average_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('average_cadence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('average_temp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('average_heartrate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_heartrate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('suffer_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hr_zone_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hr_zone_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hr_zone_3', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hr_zone_4', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hr_zone_5', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conv_distance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('conv_elevation_feet', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('conv_avg_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('conv_max_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hr_zone_1_pct', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hr_zone_2_pct', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hr_zone_3_pct', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hr_zone_4_pct', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hr_zone_5_pct', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('calories', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('activities_pkey')),
    sa.UniqueConstraint('activity_id', name=op.f('activities_activity_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('splits',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('activity_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('lap_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('distance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('elapsed_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('moving_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('average_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('start_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('split', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('splits_pkey'))
    )
    # ### end Alembic commands ###
