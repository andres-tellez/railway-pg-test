"""create initial schema

Revision ID: 95b85d34696c
Revises:
Create Date: 2025-08-01 18:04:35.395026

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "95b85d34696c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("activity_id", sa.BigInteger(), nullable=False),
        sa.Column("athlete_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("distance", sa.Float(), nullable=True),
        sa.Column("elapsed_time", sa.Integer(), nullable=True),
        sa.Column("moving_time", sa.Integer(), nullable=True),
        sa.Column("total_elevation_gain", sa.Float(), nullable=True),
        sa.Column("external_id", sa.String(), nullable=True),
        sa.Column("timezone", sa.String(), nullable=True),
        sa.Column("average_speed", sa.Float(), nullable=True),
        sa.Column("max_speed", sa.Float(), nullable=True),
        sa.Column("suffer_score", sa.Float(), nullable=True),
        sa.Column("average_heartrate", sa.Float(), nullable=True),
        sa.Column("max_heartrate", sa.Float(), nullable=True),
        sa.Column("calories", sa.Float(), nullable=True),
        sa.Column("conv_distance", sa.Float(), nullable=True),
        sa.Column("conv_elevation_feet", sa.Float(), nullable=True),
        sa.Column("conv_avg_speed", sa.Float(), nullable=True),
        sa.Column("conv_max_speed", sa.Float(), nullable=True),
        sa.Column("conv_moving_time", sa.String(), nullable=True),
        sa.Column("conv_elapsed_time", sa.String(), nullable=True),
        sa.Column("hr_zone_1", sa.Float(), nullable=True),
        sa.Column("hr_zone_2", sa.Float(), nullable=True),
        sa.Column("hr_zone_3", sa.Float(), nullable=True),
        sa.Column("hr_zone_4", sa.Float(), nullable=True),
        sa.Column("hr_zone_5", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("activity_id"),
    )
    op.create_index(
        op.f("ix_activities_activity_id"), "activities", ["activity_id"], unique=False
    )
    op.create_index(
        op.f("ix_activities_athlete_id"), "activities", ["athlete_id"], unique=False
    )
    op.create_table(
        "athletes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("strava_athlete_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("strava_athlete_id"),
    )
    op.create_table(
        "tokens",
        sa.Column("athlete_id", sa.BigInteger(), nullable=False),
        sa.Column("access_token", sa.String(), nullable=False),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("athlete_id"),
    )
    op.create_table(
        "user_profile",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column(
            "runner_level",
            sa.Enum("Beginner", "Intermediate", "Expert", name="runnerlevel"),
            nullable=False,
        ),
        sa.Column("race_history", sa.Boolean(), nullable=False),
        sa.Column("race_date", sa.String(), nullable=True),
        sa.Column(
            "race_distance",
            sa.Enum(
                "_5K", "_10K", "Half", "Marathon", "Ultra", "Other", name="racedistance"
            ),
            nullable=True,
        ),
        sa.Column(
            "past_races",
            postgresql.ARRAY(
                sa.Enum(
                    "_5K",
                    "_10K",
                    "Half",
                    "Marathon",
                    "Ultra",
                    "NoneYet",
                    name="pastrace",
                )
            ),
            nullable=True,
        ),
        sa.Column("height_feet", sa.Integer(), nullable=False),
        sa.Column("height_inches", sa.Integer(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("training_days", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "main_goal",
            sa.Enum("Fitness", "Race", "LoseWeight", "Faster", "Other", name="goal"),
            nullable=False,
        ),
        sa.Column(
            "motivation",
            postgresql.ARRAY(
                sa.Enum(
                    "Health",
                    "Competition",
                    "StressRelief",
                    "Enjoyment",
                    "Other",
                    name="motivation",
                )
            ),
            nullable=False,
        ),
        sa.Column(
            "age_group",
            sa.Enum(
                "Under18",
                "Age18_24",
                "Age25_34",
                "Age35_44",
                "Age45_54",
                "Age55Plus",
                name="agegroup",
            ),
            nullable=False,
        ),
        sa.Column("longest_run", sa.Float(), nullable=True),
        sa.Column(
            "run_preference",
            sa.Enum("Distance", "Time", "NonePref", name="runpreference"),
            nullable=False,
        ),
        sa.Column("has_injury", sa.Boolean(), nullable=False),
        sa.Column("injury_details", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "splits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("activity_id", sa.BigInteger(), nullable=False),
        sa.Column("lap_index", sa.Integer(), nullable=False),
        sa.Column("distance", sa.Float(), nullable=True),
        sa.Column("elapsed_time", sa.Integer(), nullable=True),
        sa.Column("moving_time", sa.Integer(), nullable=True),
        sa.Column("average_speed", sa.Float(), nullable=True),
        sa.Column("max_speed", sa.Float(), nullable=True),
        sa.Column("start_index", sa.Integer(), nullable=True),
        sa.Column("end_index", sa.Integer(), nullable=True),
        sa.Column("split", sa.Integer(), nullable=True),
        sa.Column("average_heartrate", sa.Float(), nullable=True),
        sa.Column("pace_zone", sa.Integer(), nullable=True),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("conv_distance", sa.Float(), nullable=True),
        sa.Column("conv_avg_speed", sa.Float(), nullable=True),
        sa.Column("conv_moving_time", sa.String(), nullable=True),
        sa.Column("conv_elapsed_time", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_id"], ["activities.activity_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("activity_id", "lap_index", name="uq_activity_lap"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("splits")
    op.drop_table("user_profile")
    op.drop_table("tokens")
    op.drop_table("athletes")
    op.drop_index(op.f("ix_activities_athlete_id"), table_name="activities")
    op.drop_index(op.f("ix_activities_activity_id"), table_name="activities")
    op.drop_table("activities")
    # ### end Alembic commands ###
